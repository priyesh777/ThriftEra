// Generated by view binder compiler. Do not edit!
package com.example.thriftera.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thriftera.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductRvItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageButton imgFavorite;

  @NonNull
  public final AppCompatImageView imgProduct;

  @NonNull
  public final LinearLayout linearProductName;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNewPrice;

  @NonNull
  public final TextView tvPrice;

  private ProductRvItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageButton imgFavorite, @NonNull AppCompatImageView imgProduct,
      @NonNull LinearLayout linearProductName, @NonNull TextView tvName,
      @NonNull TextView tvNewPrice, @NonNull TextView tvPrice) {
    this.rootView = rootView;
    this.imgFavorite = imgFavorite;
    this.imgProduct = imgProduct;
    this.linearProductName = linearProductName;
    this.tvName = tvName;
    this.tvNewPrice = tvNewPrice;
    this.tvPrice = tvPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductRvItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductRvItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_rv_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductRvItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_favorite;
      AppCompatImageButton imgFavorite = ViewBindings.findChildViewById(rootView, id);
      if (imgFavorite == null) {
        break missingId;
      }

      id = R.id.img_product;
      AppCompatImageView imgProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgProduct == null) {
        break missingId;
      }

      id = R.id.linear_product_name;
      LinearLayout linearProductName = ViewBindings.findChildViewById(rootView, id);
      if (linearProductName == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_new_price;
      TextView tvNewPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvNewPrice == null) {
        break missingId;
      }

      id = R.id.tv_price;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      return new ProductRvItemBinding((ConstraintLayout) rootView, imgFavorite, imgProduct,
          linearProductName, tvName, tvNewPrice, tvPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
