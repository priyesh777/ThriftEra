// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kelineyt.R;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView emptySearchTexture;

  @NonNull
  public final LinearLayout homeHeader;

  @NonNull
  public final ConstraintLayout layoutSearchEmpty;

  @NonNull
  public final LinearProgressIndicator progressbarCart;

  @NonNull
  public final RecyclerView rvBestProducts;

  @NonNull
  public final ConstraintLayout searchBar;

  private FragmentSearchBinding(@NonNull NestedScrollView rootView,
      @NonNull ImageView emptySearchTexture, @NonNull LinearLayout homeHeader,
      @NonNull ConstraintLayout layoutSearchEmpty, @NonNull LinearProgressIndicator progressbarCart,
      @NonNull RecyclerView rvBestProducts, @NonNull ConstraintLayout searchBar) {
    this.rootView = rootView;
    this.emptySearchTexture = emptySearchTexture;
    this.homeHeader = homeHeader;
    this.layoutSearchEmpty = layoutSearchEmpty;
    this.progressbarCart = progressbarCart;
    this.rvBestProducts = rvBestProducts;
    this.searchBar = searchBar;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptySearchTexture;
      ImageView emptySearchTexture = ViewBindings.findChildViewById(rootView, id);
      if (emptySearchTexture == null) {
        break missingId;
      }

      id = R.id.homeHeader;
      LinearLayout homeHeader = ViewBindings.findChildViewById(rootView, id);
      if (homeHeader == null) {
        break missingId;
      }

      id = R.id.layout_search_empty;
      ConstraintLayout layoutSearchEmpty = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearchEmpty == null) {
        break missingId;
      }

      id = R.id.progressbarCart;
      LinearProgressIndicator progressbarCart = ViewBindings.findChildViewById(rootView, id);
      if (progressbarCart == null) {
        break missingId;
      }

      id = R.id.rvBestProducts;
      RecyclerView rvBestProducts = ViewBindings.findChildViewById(rootView, id);
      if (rvBestProducts == null) {
        break missingId;
      }

      id = R.id.searchBar;
      ConstraintLayout searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      return new FragmentSearchBinding((NestedScrollView) rootView, emptySearchTexture, homeHeader,
          layoutSearchEmpty, progressbarCart, rvBestProducts, searchBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
