// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kelineyt.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView arrow;

  @NonNull
  public final TextView checkBookedItems;

  @NonNull
  public final ConstraintLayout constraintParent;

  @NonNull
  public final ConstraintLayout constraintProfile;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final CircleImageView imageUser;

  @NonNull
  public final LinearLayout linearBookedItem;

  @NonNull
  public final LinearLayout linearLogOut;

  @NonNull
  public final LinearLayout linearRegional;

  @NonNull
  public final TextView logout;

  @NonNull
  public final ProgressBar progressbarSettings;

  @NonNull
  public final TextView tvBookedItems;

  @NonNull
  public final TextView tvEditPersonalDetails;

  @NonNull
  public final TextView tvRegional;

  @NonNull
  public final TextView tvSettings;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final TextView tvVersion;

  @NonNull
  public final LinearLayout userBookedItems;

  private FragmentProfileBinding(@NonNull NestedScrollView rootView, @NonNull ImageView arrow,
      @NonNull TextView checkBookedItems, @NonNull ConstraintLayout constraintParent,
      @NonNull ConstraintLayout constraintProfile, @NonNull Guideline guideline1,
      @NonNull Guideline guideline2, @NonNull CircleImageView imageUser,
      @NonNull LinearLayout linearBookedItem, @NonNull LinearLayout linearLogOut,
      @NonNull LinearLayout linearRegional, @NonNull TextView logout,
      @NonNull ProgressBar progressbarSettings, @NonNull TextView tvBookedItems,
      @NonNull TextView tvEditPersonalDetails, @NonNull TextView tvRegional,
      @NonNull TextView tvSettings, @NonNull TextView tvUserName, @NonNull TextView tvVersion,
      @NonNull LinearLayout userBookedItems) {
    this.rootView = rootView;
    this.arrow = arrow;
    this.checkBookedItems = checkBookedItems;
    this.constraintParent = constraintParent;
    this.constraintProfile = constraintProfile;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.imageUser = imageUser;
    this.linearBookedItem = linearBookedItem;
    this.linearLogOut = linearLogOut;
    this.linearRegional = linearRegional;
    this.logout = logout;
    this.progressbarSettings = progressbarSettings;
    this.tvBookedItems = tvBookedItems;
    this.tvEditPersonalDetails = tvEditPersonalDetails;
    this.tvRegional = tvRegional;
    this.tvSettings = tvSettings;
    this.tvUserName = tvUserName;
    this.tvVersion = tvVersion;
    this.userBookedItems = userBookedItems;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow;
      ImageView arrow = ViewBindings.findChildViewById(rootView, id);
      if (arrow == null) {
        break missingId;
      }

      id = R.id.checkBookedItems;
      TextView checkBookedItems = ViewBindings.findChildViewById(rootView, id);
      if (checkBookedItems == null) {
        break missingId;
      }

      id = R.id.constraintParent;
      ConstraintLayout constraintParent = ViewBindings.findChildViewById(rootView, id);
      if (constraintParent == null) {
        break missingId;
      }

      id = R.id.constraintProfile;
      ConstraintLayout constraintProfile = ViewBindings.findChildViewById(rootView, id);
      if (constraintProfile == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.imageUser;
      CircleImageView imageUser = ViewBindings.findChildViewById(rootView, id);
      if (imageUser == null) {
        break missingId;
      }

      id = R.id.linear_booked_item;
      LinearLayout linearBookedItem = ViewBindings.findChildViewById(rootView, id);
      if (linearBookedItem == null) {
        break missingId;
      }

      id = R.id.linearLogOut;
      LinearLayout linearLogOut = ViewBindings.findChildViewById(rootView, id);
      if (linearLogOut == null) {
        break missingId;
      }

      id = R.id.linear_regional;
      LinearLayout linearRegional = ViewBindings.findChildViewById(rootView, id);
      if (linearRegional == null) {
        break missingId;
      }

      id = R.id.logout;
      TextView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.progressbarSettings;
      ProgressBar progressbarSettings = ViewBindings.findChildViewById(rootView, id);
      if (progressbarSettings == null) {
        break missingId;
      }

      id = R.id.tvBookedItems;
      TextView tvBookedItems = ViewBindings.findChildViewById(rootView, id);
      if (tvBookedItems == null) {
        break missingId;
      }

      id = R.id.tv_edit_personal_details;
      TextView tvEditPersonalDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvEditPersonalDetails == null) {
        break missingId;
      }

      id = R.id.tvRegional;
      TextView tvRegional = ViewBindings.findChildViewById(rootView, id);
      if (tvRegional == null) {
        break missingId;
      }

      id = R.id.tvSettings;
      TextView tvSettings = ViewBindings.findChildViewById(rootView, id);
      if (tvSettings == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.tvVersion;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      id = R.id.userBookedItems;
      LinearLayout userBookedItems = ViewBindings.findChildViewById(rootView, id);
      if (userBookedItems == null) {
        break missingId;
      }

      return new FragmentProfileBinding((NestedScrollView) rootView, arrow, checkBookedItems,
          constraintParent, constraintProfile, guideline1, guideline2, imageUser, linearBookedItem,
          linearLogOut, linearRegional, logout, progressbarSettings, tvBookedItems,
          tvEditPersonalDetails, tvRegional, tvSettings, tvUserName, tvVersion, userBookedItems);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
