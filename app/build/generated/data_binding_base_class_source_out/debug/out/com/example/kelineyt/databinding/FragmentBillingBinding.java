// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.simplepass.loadingbutton.customViews.CircularProgressButton;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBillingBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final View bottomLine;

  @NonNull
  public final CircularProgressButton buttonPlaceOrder;

  @NonNull
  public final ImageView imageAddAddress;

  @NonNull
  public final ImageView imageCloseBilling;

  @NonNull
  public final Guideline leftGuideline;

  @NonNull
  public final View middleLine;

  @NonNull
  public final ProgressBar progressbarAddress;

  @NonNull
  public final Guideline rightGuideline;

  @NonNull
  public final RecyclerView rvAddress;

  @NonNull
  public final FrameLayout rvFrame;

  @NonNull
  public final RecyclerView rvProducts;

  @NonNull
  public final Toolbar toolbarBilling;

  @NonNull
  public final View topLine;

  @NonNull
  public final ConstraintLayout totalBoxContainer;

  @NonNull
  public final TextView tvPaymentExplanation;

  @NonNull
  public final TextView tvPaymentMethods;

  @NonNull
  public final TextView tvShoppingAddress;

  @NonNull
  public final TextView tvTotalPrice;

  private FragmentBillingBinding(@NonNull NestedScrollView rootView, @NonNull View bottomLine,
      @NonNull CircularProgressButton buttonPlaceOrder, @NonNull ImageView imageAddAddress,
      @NonNull ImageView imageCloseBilling, @NonNull Guideline leftGuideline,
      @NonNull View middleLine, @NonNull ProgressBar progressbarAddress,
      @NonNull Guideline rightGuideline, @NonNull RecyclerView rvAddress,
      @NonNull FrameLayout rvFrame, @NonNull RecyclerView rvProducts,
      @NonNull Toolbar toolbarBilling, @NonNull View topLine,
      @NonNull ConstraintLayout totalBoxContainer, @NonNull TextView tvPaymentExplanation,
      @NonNull TextView tvPaymentMethods, @NonNull TextView tvShoppingAddress,
      @NonNull TextView tvTotalPrice) {
    this.rootView = rootView;
    this.bottomLine = bottomLine;
    this.buttonPlaceOrder = buttonPlaceOrder;
    this.imageAddAddress = imageAddAddress;
    this.imageCloseBilling = imageCloseBilling;
    this.leftGuideline = leftGuideline;
    this.middleLine = middleLine;
    this.progressbarAddress = progressbarAddress;
    this.rightGuideline = rightGuideline;
    this.rvAddress = rvAddress;
    this.rvFrame = rvFrame;
    this.rvProducts = rvProducts;
    this.toolbarBilling = toolbarBilling;
    this.topLine = topLine;
    this.totalBoxContainer = totalBoxContainer;
    this.tvPaymentExplanation = tvPaymentExplanation;
    this.tvPaymentMethods = tvPaymentMethods;
    this.tvShoppingAddress = tvShoppingAddress;
    this.tvTotalPrice = tvTotalPrice;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBillingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBillingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_billing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBillingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomLine;
      View bottomLine = ViewBindings.findChildViewById(rootView, id);
      if (bottomLine == null) {
        break missingId;
      }

      id = R.id.buttonPlaceOrder;
      CircularProgressButton buttonPlaceOrder = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlaceOrder == null) {
        break missingId;
      }

      id = R.id.imageAddAddress;
      ImageView imageAddAddress = ViewBindings.findChildViewById(rootView, id);
      if (imageAddAddress == null) {
        break missingId;
      }

      id = R.id.imageCloseBilling;
      ImageView imageCloseBilling = ViewBindings.findChildViewById(rootView, id);
      if (imageCloseBilling == null) {
        break missingId;
      }

      id = R.id.leftGuideline;
      Guideline leftGuideline = ViewBindings.findChildViewById(rootView, id);
      if (leftGuideline == null) {
        break missingId;
      }

      id = R.id.middleLine;
      View middleLine = ViewBindings.findChildViewById(rootView, id);
      if (middleLine == null) {
        break missingId;
      }

      id = R.id.progressbarAddress;
      ProgressBar progressbarAddress = ViewBindings.findChildViewById(rootView, id);
      if (progressbarAddress == null) {
        break missingId;
      }

      id = R.id.rightGuideline;
      Guideline rightGuideline = ViewBindings.findChildViewById(rootView, id);
      if (rightGuideline == null) {
        break missingId;
      }

      id = R.id.rvAddress;
      RecyclerView rvAddress = ViewBindings.findChildViewById(rootView, id);
      if (rvAddress == null) {
        break missingId;
      }

      id = R.id.rvFrame;
      FrameLayout rvFrame = ViewBindings.findChildViewById(rootView, id);
      if (rvFrame == null) {
        break missingId;
      }

      id = R.id.rvProducts;
      RecyclerView rvProducts = ViewBindings.findChildViewById(rootView, id);
      if (rvProducts == null) {
        break missingId;
      }

      id = R.id.toolbarBilling;
      Toolbar toolbarBilling = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBilling == null) {
        break missingId;
      }

      id = R.id.topLine;
      View topLine = ViewBindings.findChildViewById(rootView, id);
      if (topLine == null) {
        break missingId;
      }

      id = R.id.totalBoxContainer;
      ConstraintLayout totalBoxContainer = ViewBindings.findChildViewById(rootView, id);
      if (totalBoxContainer == null) {
        break missingId;
      }

      id = R.id.tvPaymentExplanation;
      TextView tvPaymentExplanation = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentExplanation == null) {
        break missingId;
      }

      id = R.id.tvPaymentMethods;
      TextView tvPaymentMethods = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentMethods == null) {
        break missingId;
      }

      id = R.id.tvShoppingAddress;
      TextView tvShoppingAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvShoppingAddress == null) {
        break missingId;
      }

      id = R.id.tvTotalPrice;
      TextView tvTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPrice == null) {
        break missingId;
      }

      return new FragmentBillingBinding((NestedScrollView) rootView, bottomLine, buttonPlaceOrder,
          imageAddAddress, imageCloseBilling, leftGuideline, middleLine, progressbarAddress,
          rightGuideline, rvAddress, rvFrame, rvProducts, toolbarBilling, topLine,
          totalBoxContainer, tvPaymentExplanation, tvPaymentMethods, tvShoppingAddress,
          tvTotalPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
