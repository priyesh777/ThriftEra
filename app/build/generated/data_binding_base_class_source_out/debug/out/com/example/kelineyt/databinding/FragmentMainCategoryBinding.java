// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainCategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar bestProductsProgressbar;

  @NonNull
  public final TextView latestProducts;

  @NonNull
  public final ProgressBar mainCategoryProgressbar;

  @NonNull
  public final NestedScrollView nestedScrollMainCategory;

  @NonNull
  public final RecyclerView rvBestDealsProducts;

  @NonNull
  public final RecyclerView rvBestProducts;

  @NonNull
  public final RecyclerView rvSpecialProducts;

  @NonNull
  public final TextView tvBestDeals;

  @NonNull
  public final TextView tvBestProducts;

  private FragmentMainCategoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar bestProductsProgressbar, @NonNull TextView latestProducts,
      @NonNull ProgressBar mainCategoryProgressbar,
      @NonNull NestedScrollView nestedScrollMainCategory, @NonNull RecyclerView rvBestDealsProducts,
      @NonNull RecyclerView rvBestProducts, @NonNull RecyclerView rvSpecialProducts,
      @NonNull TextView tvBestDeals, @NonNull TextView tvBestProducts) {
    this.rootView = rootView;
    this.bestProductsProgressbar = bestProductsProgressbar;
    this.latestProducts = latestProducts;
    this.mainCategoryProgressbar = mainCategoryProgressbar;
    this.nestedScrollMainCategory = nestedScrollMainCategory;
    this.rvBestDealsProducts = rvBestDealsProducts;
    this.rvBestProducts = rvBestProducts;
    this.rvSpecialProducts = rvSpecialProducts;
    this.tvBestDeals = tvBestDeals;
    this.tvBestProducts = tvBestProducts;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bestProductsProgressbar;
      ProgressBar bestProductsProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (bestProductsProgressbar == null) {
        break missingId;
      }

      id = R.id.latestProducts;
      TextView latestProducts = ViewBindings.findChildViewById(rootView, id);
      if (latestProducts == null) {
        break missingId;
      }

      id = R.id.mainCategoryProgressbar;
      ProgressBar mainCategoryProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (mainCategoryProgressbar == null) {
        break missingId;
      }

      id = R.id.nestedScrollMainCategory;
      NestedScrollView nestedScrollMainCategory = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollMainCategory == null) {
        break missingId;
      }

      id = R.id.rvBestDealsProducts;
      RecyclerView rvBestDealsProducts = ViewBindings.findChildViewById(rootView, id);
      if (rvBestDealsProducts == null) {
        break missingId;
      }

      id = R.id.rvBestProducts;
      RecyclerView rvBestProducts = ViewBindings.findChildViewById(rootView, id);
      if (rvBestProducts == null) {
        break missingId;
      }

      id = R.id.rvSpecialProducts;
      RecyclerView rvSpecialProducts = ViewBindings.findChildViewById(rootView, id);
      if (rvSpecialProducts == null) {
        break missingId;
      }

      id = R.id.tvBestDeals;
      TextView tvBestDeals = ViewBindings.findChildViewById(rootView, id);
      if (tvBestDeals == null) {
        break missingId;
      }

      id = R.id.tvBestProducts;
      TextView tvBestProducts = ViewBindings.findChildViewById(rootView, id);
      if (tvBestProducts == null) {
        break missingId;
      }

      return new FragmentMainCategoryBinding((ConstraintLayout) rootView, bestProductsProgressbar,
          latestProducts, mainCategoryProgressbar, nestedScrollMainCategory, rvBestDealsProducts,
          rvBestProducts, rvSpecialProducts, tvBestDeals, tvBestProducts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
