// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.simplepass.loadingbutton.customViews.CircularProgressButton;
import com.example.kelineyt.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserAccountBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CircularProgressButton buttonSave;

  @NonNull
  public final EditText edEmail;

  @NonNull
  public final EditText edFirstName;

  @NonNull
  public final EditText edLastName;

  @NonNull
  public final ImageView imageCloseUserAccount;

  @NonNull
  public final CircleImageView imageEdit;

  @NonNull
  public final CircleImageView imageUser;

  @NonNull
  public final Guideline leftGuideline;

  @NonNull
  public final ProgressBar progressbarAccount;

  @NonNull
  public final Guideline rightGuideline;

  @NonNull
  public final Toolbar toolbarUserAccount;

  @NonNull
  public final TextView tvUpdatePassword;

  private FragmentUserAccountBinding(@NonNull NestedScrollView rootView,
      @NonNull CircularProgressButton buttonSave, @NonNull EditText edEmail,
      @NonNull EditText edFirstName, @NonNull EditText edLastName,
      @NonNull ImageView imageCloseUserAccount, @NonNull CircleImageView imageEdit,
      @NonNull CircleImageView imageUser, @NonNull Guideline leftGuideline,
      @NonNull ProgressBar progressbarAccount, @NonNull Guideline rightGuideline,
      @NonNull Toolbar toolbarUserAccount, @NonNull TextView tvUpdatePassword) {
    this.rootView = rootView;
    this.buttonSave = buttonSave;
    this.edEmail = edEmail;
    this.edFirstName = edFirstName;
    this.edLastName = edLastName;
    this.imageCloseUserAccount = imageCloseUserAccount;
    this.imageEdit = imageEdit;
    this.imageUser = imageUser;
    this.leftGuideline = leftGuideline;
    this.progressbarAccount = progressbarAccount;
    this.rightGuideline = rightGuideline;
    this.toolbarUserAccount = toolbarUserAccount;
    this.tvUpdatePassword = tvUpdatePassword;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSave;
      CircularProgressButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.edEmail;
      EditText edEmail = ViewBindings.findChildViewById(rootView, id);
      if (edEmail == null) {
        break missingId;
      }

      id = R.id.edFirstName;
      EditText edFirstName = ViewBindings.findChildViewById(rootView, id);
      if (edFirstName == null) {
        break missingId;
      }

      id = R.id.edLastName;
      EditText edLastName = ViewBindings.findChildViewById(rootView, id);
      if (edLastName == null) {
        break missingId;
      }

      id = R.id.imageCloseUserAccount;
      ImageView imageCloseUserAccount = ViewBindings.findChildViewById(rootView, id);
      if (imageCloseUserAccount == null) {
        break missingId;
      }

      id = R.id.imageEdit;
      CircleImageView imageEdit = ViewBindings.findChildViewById(rootView, id);
      if (imageEdit == null) {
        break missingId;
      }

      id = R.id.imageUser;
      CircleImageView imageUser = ViewBindings.findChildViewById(rootView, id);
      if (imageUser == null) {
        break missingId;
      }

      id = R.id.leftGuideline;
      Guideline leftGuideline = ViewBindings.findChildViewById(rootView, id);
      if (leftGuideline == null) {
        break missingId;
      }

      id = R.id.progressbarAccount;
      ProgressBar progressbarAccount = ViewBindings.findChildViewById(rootView, id);
      if (progressbarAccount == null) {
        break missingId;
      }

      id = R.id.rightGuideline;
      Guideline rightGuideline = ViewBindings.findChildViewById(rootView, id);
      if (rightGuideline == null) {
        break missingId;
      }

      id = R.id.toolbarUserAccount;
      Toolbar toolbarUserAccount = ViewBindings.findChildViewById(rootView, id);
      if (toolbarUserAccount == null) {
        break missingId;
      }

      id = R.id.tvUpdatePassword;
      TextView tvUpdatePassword = ViewBindings.findChildViewById(rootView, id);
      if (tvUpdatePassword == null) {
        break missingId;
      }

      return new FragmentUserAccountBinding((NestedScrollView) rootView, buttonSave, edEmail,
          edFirstName, edLastName, imageCloseUserAccount, imageEdit, imageUser, leftGuideline,
          progressbarAccount, rightGuideline, toolbarUserAccount, tvUpdatePassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
