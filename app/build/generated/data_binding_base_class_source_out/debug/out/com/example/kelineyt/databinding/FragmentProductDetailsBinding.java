// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import br.com.simplepass.loadingbutton.customViews.CircularProgressButton;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CircularProgressButton buttonAddToCart;

  @NonNull
  public final CardView cardProductImages;

  @NonNull
  public final ImageView imageClose;

  @NonNull
  public final LinearLayout linearProductPref;

  @NonNull
  public final LinearLayout linearTitlePrice;

  @NonNull
  public final RecyclerView rvColors;

  @NonNull
  public final RecyclerView rvSizes;

  @NonNull
  public final View topLine;

  @NonNull
  public final TextView tvProductColors;

  @NonNull
  public final TextView tvProductDescription;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvProductPrice;

  @NonNull
  public final TextView tvProductSize;

  @NonNull
  public final ViewPager2 viewPagerProductImages;

  private FragmentProductDetailsBinding(@NonNull NestedScrollView rootView,
      @NonNull CircularProgressButton buttonAddToCart, @NonNull CardView cardProductImages,
      @NonNull ImageView imageClose, @NonNull LinearLayout linearProductPref,
      @NonNull LinearLayout linearTitlePrice, @NonNull RecyclerView rvColors,
      @NonNull RecyclerView rvSizes, @NonNull View topLine, @NonNull TextView tvProductColors,
      @NonNull TextView tvProductDescription, @NonNull TextView tvProductName,
      @NonNull TextView tvProductPrice, @NonNull TextView tvProductSize,
      @NonNull ViewPager2 viewPagerProductImages) {
    this.rootView = rootView;
    this.buttonAddToCart = buttonAddToCart;
    this.cardProductImages = cardProductImages;
    this.imageClose = imageClose;
    this.linearProductPref = linearProductPref;
    this.linearTitlePrice = linearTitlePrice;
    this.rvColors = rvColors;
    this.rvSizes = rvSizes;
    this.topLine = topLine;
    this.tvProductColors = tvProductColors;
    this.tvProductDescription = tvProductDescription;
    this.tvProductName = tvProductName;
    this.tvProductPrice = tvProductPrice;
    this.tvProductSize = tvProductSize;
    this.viewPagerProductImages = viewPagerProductImages;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddToCart;
      CircularProgressButton buttonAddToCart = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddToCart == null) {
        break missingId;
      }

      id = R.id.cardProductImages;
      CardView cardProductImages = ViewBindings.findChildViewById(rootView, id);
      if (cardProductImages == null) {
        break missingId;
      }

      id = R.id.imageClose;
      ImageView imageClose = ViewBindings.findChildViewById(rootView, id);
      if (imageClose == null) {
        break missingId;
      }

      id = R.id.linearProductPref;
      LinearLayout linearProductPref = ViewBindings.findChildViewById(rootView, id);
      if (linearProductPref == null) {
        break missingId;
      }

      id = R.id.linearTitlePrice;
      LinearLayout linearTitlePrice = ViewBindings.findChildViewById(rootView, id);
      if (linearTitlePrice == null) {
        break missingId;
      }

      id = R.id.rvColors;
      RecyclerView rvColors = ViewBindings.findChildViewById(rootView, id);
      if (rvColors == null) {
        break missingId;
      }

      id = R.id.rv_sizes;
      RecyclerView rvSizes = ViewBindings.findChildViewById(rootView, id);
      if (rvSizes == null) {
        break missingId;
      }

      id = R.id.topLine;
      View topLine = ViewBindings.findChildViewById(rootView, id);
      if (topLine == null) {
        break missingId;
      }

      id = R.id.tvProductColors;
      TextView tvProductColors = ViewBindings.findChildViewById(rootView, id);
      if (tvProductColors == null) {
        break missingId;
      }

      id = R.id.tvProductDescription;
      TextView tvProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDescription == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tvProductPrice;
      TextView tvProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvProductPrice == null) {
        break missingId;
      }

      id = R.id.tvProductSize;
      TextView tvProductSize = ViewBindings.findChildViewById(rootView, id);
      if (tvProductSize == null) {
        break missingId;
      }

      id = R.id.viewPagerProductImages;
      ViewPager2 viewPagerProductImages = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerProductImages == null) {
        break missingId;
      }

      return new FragmentProductDetailsBinding((NestedScrollView) rootView, buttonAddToCart,
          cardProductImages, imageClose, linearProductPref, linearTitlePrice, rvColors, rvSizes,
          topLine, tvProductColors, tvProductDescription, tvProductName, tvProductPrice,
          tvProductSize, viewPagerProductImages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
